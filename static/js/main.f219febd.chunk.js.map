{"version":3,"sources":["layout/Panel.js","layout/Display.js","App.js","index.js"],"names":["Panel","props","classes","concat","menuHide","react_default","a","createElement","Fragment","className","onClick","handleHamburgerClick","htmlFor","id","type","checked","onChange","value","onSubmit","Display","tasks","data","search","filter","task","name","toUpperCase","includes","liTasks","map","key","counter","priority","madeDate","toLocaleDateString","remove","App","state","handleInputChange","e","target","_this","setState","handleFormSubmit","length","Date","prevState","temporaryTasks","Object","toConsumableArray","push","handleLiRemove","index","parentNode","console","log","layout_Panel","this","layout_Display","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"0SAoCeA,SAjCD,SAAAC,GACZ,IAAMC,EAAO,SAAAC,OAAaF,EAAMG,SAAsB,GAAX,UAE3C,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,KACEE,UAAS,UAAAN,OAAYF,EAAMG,SAAW,OAAS,SAC/CM,QAAST,EAAMU,uBAEjBN,EAAAC,EAAAC,cAAA,OAAKE,UAAWP,GACdG,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOK,QAAQ,WAAWH,UAAU,aAApC,YAGAJ,EAAAC,EAAAC,cAAA,SACEM,GAAG,WACHC,KAAK,WACLL,UAAU,WACVM,QAASd,EAAMc,QACfC,SAAUf,EAAMe,WAElBX,EAAAC,EAAAC,cAAA,SACEE,UAAU,OACVO,SAAUf,EAAMe,SAChBC,MAAOhB,EAAMgB,MACbH,KAAK,SAEPT,EAAAC,EAAAC,cAAA,UAAQG,QAAST,EAAMiB,UAAvB,WCKOC,SAhCC,SAAAlB,GACd,IAAImB,EAAQnB,EAAMoB,KACdpB,EAAMqB,SACRF,EAAQA,EAAMG,OAAO,SAAAC,GAAI,OACvBA,EAAKC,KAAKC,cAAcC,SAAS1B,EAAMqB,OAAOI,kBAIlD,IAAME,EAAUR,EAAMS,IAAI,SAAAL,GAAI,OAC5BnB,EAAAC,EAAAC,cAAA,MACEuB,IAAKN,EAAKO,QACVlB,GAAIW,EAAKO,QACTtB,UAAWe,EAAKQ,SAAW,WAAa,IAExC3B,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,eAAiCe,EAAKC,MACtCpB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,WAAkCe,EAAKS,SAASC,sBAChD7B,EAAAC,EAAAC,cAAA,UAAQG,QAAST,EAAMkC,QAAvB,QAIJ,OACE9B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,SAAOK,QAAQ,IACbP,EAAAC,EAAAC,cAAA,SAAOO,KAAK,OAAOL,UAAU,SAASO,SAAUf,EAAMe,WACtDX,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAEfJ,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAKqB,MCoEIQ,oNA5FbC,MAAQ,CACNpB,MAAO,GACPF,SAAS,EACTK,MAAO,GACPW,QAAS,EACTT,OAAQ,GACRlB,UAAU,KAGZkC,kBAAoB,SAAAC,GACS,SAAvBA,EAAEC,OAAO/B,UACXgC,EAAKC,SAAS,CACZzB,MAAOsB,EAAEC,OAAOvB,QAEc,WAAvBsB,EAAEC,OAAO/B,UAClBgC,EAAKC,SAAS,CACZpB,OAAQiB,EAAEC,OAAOvB,QAGnBwB,EAAKC,SAAS,CACZ3B,QAASwB,EAAEC,OAAOzB,aAKxB4B,iBAAmB,WAEjB,GAAqB,IADHF,EAAKJ,MAAfpB,MACE2B,OAAc,CACtB,IAAMX,EAAW,IAAIY,KAErBJ,EAAKC,SAAS,SAAAI,GACZ,IAAMC,EAAcC,OAAAC,EAAA,EAAAD,CAAOF,EAAU1B,OAQrC,OAPA2B,EAAeG,KAAK,CAClBzB,KAAMqB,EAAU7B,MAChBgB,WACAF,QAASe,EAAUf,QACnBC,SAAUc,EAAU/B,UAGf,CACLK,MAAO2B,EACP9B,MAAO,GACPc,UAAWe,EAAUf,QACrBhB,SAAS,SAMjBoC,eAAiB,SAAAZ,GACf,IAAMa,EAAQb,EAAEC,OAAOa,WAAT,GACdZ,EAAKC,SAAS,SAAAI,GACZ,IACMC,EADKC,OAAAC,EAAA,EAAAD,CAAOF,EAAU1B,OACCG,OAAO,SAAAC,GAClC,OAAOA,EAAKO,QAAU,KAAOqB,IAI/B,OAFAE,QAAQC,IAAIR,GACZO,QAAQC,IAAIH,GACL,CACLhC,MAAO2B,QAKbpC,qBAAuB,WACrB8B,EAAKC,SAAS,SAAAI,GAAS,MAAK,CAC1B1C,UAAW0C,EAAU1C,qFAKvB,OACEC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACiD,EAAD,CACExC,SAAUyC,KAAKnB,kBACfrB,MAAOwC,KAAKpB,MAAMpB,MAClBC,SAAUuC,KAAKd,iBACf5B,QAAS0C,KAAKpB,MAAMtB,QACpBX,SAAUqD,KAAKpB,MAAMjC,SACrBO,qBAAsB8C,KAAK9C,uBAE7BN,EAAAC,EAAAC,cAACmD,EAAD,CACErC,KAAMoC,KAAKpB,MAAMjB,MACjBe,OAAQsB,KAAKN,eACbnC,SAAUyC,KAAKnB,kBACfhB,OAAQmC,KAAKpB,MAAMf,iBAtFXqC,cCAlBC,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f219febd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Panel.css\";\r\n\r\nconst Panel = props => {\r\n  const classes = `panel ${!props.menuHide ? \"active\" : \"\"}`;\r\n\r\n  return (\r\n    <>\r\n      <i\r\n        className={`fas fa-${props.menuHide ? \"bars\" : \"times\"}`}\r\n        onClick={props.handleHamburgerClick}\r\n      />\r\n      <div className={classes}>\r\n        <h1>Type your task</h1>\r\n        <label htmlFor=\"priority\" className=\"container\">\r\n          Priority\r\n        </label>\r\n        <input\r\n          id=\"priority\"\r\n          type=\"checkbox\"\r\n          className=\"priority\"\r\n          checked={props.checked}\r\n          onChange={props.onChange}\r\n        />\r\n        <input\r\n          className=\"make\"\r\n          onChange={props.onChange}\r\n          value={props.value}\r\n          type=\"text\"\r\n        />\r\n        <button onClick={props.onSubmit}>Add</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import React from \"react\";\r\nimport \"../styles/Display.css\";\r\n\r\nconst Display = props => {\r\n  let tasks = props.data;\r\n  if (props.search) {\r\n    tasks = tasks.filter(task =>\r\n      task.name.toUpperCase().includes(props.search.toUpperCase())\r\n    );\r\n  }\r\n\r\n  const liTasks = tasks.map(task => (\r\n    <li\r\n      key={task.counter}\r\n      id={task.counter}\r\n      className={task.priority ? \"priority\" : \"\"}\r\n    >\r\n      <h1 className=\"task__h1\">Tytu≈Ç: {task.name}</h1>\r\n      <h2 className=\"task__h2\">Dodane: {task.madeDate.toLocaleDateString()}</h2>\r\n      <button onClick={props.remove}>X</button>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <label htmlFor=\"\">\r\n        <input type=\"text\" className=\"search\" onChange={props.onChange} />\r\n        <i className=\"fas fa-search\" />\r\n      </label>\r\n      <h1>Tasks List</h1>\r\n      <ul>{liTasks}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { Component } from \"react\";\nimport Panel from \"./layout/Panel\";\nimport Display from \"./layout/Display\";\nimport \"./styles/App.css\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    checked: false,\n    tasks: [],\n    counter: 0,\n    search: \"\",\n    menuHide: true\n  };\n\n  handleInputChange = e => {\n    if (e.target.className === \"make\") {\n      this.setState({\n        value: e.target.value\n      });\n    } else if (e.target.className === \"search\") {\n      this.setState({\n        search: e.target.value\n      });\n    } else {\n      this.setState({\n        checked: e.target.checked\n      });\n    }\n  };\n\n  handleFormSubmit = () => {\n    const { value } = this.state;\n    if (value.length !== 0) {\n      const madeDate = new Date();\n\n      this.setState(prevState => {\n        const temporaryTasks = [...prevState.tasks];\n        temporaryTasks.push({\n          name: prevState.value,\n          madeDate,\n          counter: prevState.counter,\n          priority: prevState.checked\n        });\n\n        return {\n          tasks: temporaryTasks,\n          value: \"\",\n          counter: ++prevState.counter,\n          checked: false\n        };\n      });\n    }\n  };\n\n  handleLiRemove = e => {\n    const index = e.target.parentNode[\"id\"];\n    this.setState(prevState => {\n      const tasks = [...prevState.tasks];\n      const temporaryTasks = tasks.filter(task => {\n        return task.counter + \"\" !== index;\n      });\n      console.log(temporaryTasks);\n      console.log(index);\n      return {\n        tasks: temporaryTasks\n      };\n    });\n  };\n\n  handleHamburgerClick = () => {\n    this.setState(prevState => ({\n      menuHide: !prevState.menuHide\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Panel\n          onChange={this.handleInputChange}\n          value={this.state.value}\n          onSubmit={this.handleFormSubmit}\n          checked={this.state.checked}\n          menuHide={this.state.menuHide}\n          handleHamburgerClick={this.handleHamburgerClick}\n        />\n        <Display\n          data={this.state.tasks}\n          remove={this.handleLiRemove}\n          onChange={this.handleInputChange}\n          search={this.state.search}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}